<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Bridged-Race Population Estimates 1990-2018' inline='true' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bridged-Race Population Estimates 1990-2018' name='textscan.1kb6q9m0busn4p1e4opm709oo3b7'>
            <connection class='textscan' directory='/Users/stenistephan/Desktop' filename='Bridged-Race Population Estimates 1990-2018.csv' password='' server='' />
          </named-connection>
          <named-connection caption='GDP' name='textscan.1o9fxq31lfbp6g117hn291530hkp'>
            <connection class='textscan' directory='/Users/stenistephan/Desktop' filename='GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Bridged-Race Population Estimates 1990-2018.csv].[State]' />
                <expression op='[GDP.csv].[State]' />
              </expression>
              <expression op='='>
                <expression op='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates]' />
                <expression op='[GDP.csv].[Year]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1kb6q9m0busn4p1e4opm709oo3b7' name='Bridged-Race Population Estimates 1990-2018.csv' table='[Bridged-Race Population Estimates 1990-2018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Notes' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Race' ordinal='2' />
              <column datatype='date' date-parse-format='yyyy' name='Yearly July 1st Estimates' ordinal='3' />
              <column datatype='integer' name='Yearly July 1st Estimates Code' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1o9fxq31lfbp6g117hn291530hkp' name='GDP.csv' table='[GDP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='real' name='GDP' ordinal='2' />
              <column datatype='string' name='F4' ordinal='3' />
              <column datatype='string' name='F5' ordinal='4' />
              <column datatype='string' name='F6' ordinal='5' />
              <column datatype='string' name='F7' ordinal='6' />
              <column datatype='string' name='F8' ordinal='7' />
              <column datatype='string' name='F9' ordinal='8' />
              <column datatype='string' name='F10' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
              <column datatype='string' name='F12' ordinal='11' />
              <column datatype='string' name='F13' ordinal='12' />
              <column datatype='string' name='F14' ordinal='13' />
              <column datatype='string' name='F15' ordinal='14' />
              <column datatype='string' name='F16' ordinal='15' />
              <column datatype='string' name='F17' ordinal='16' />
              <column datatype='string' name='F18' ordinal='17' />
              <column datatype='string' name='F19' ordinal='18' />
              <column datatype='string' name='F20' ordinal='19' />
              <column datatype='string' name='F21' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
              <column datatype='string' name='F23' ordinal='22' />
              <column datatype='string' name='F24' ordinal='23' />
              <column datatype='string' name='F25' ordinal='24' />
              <column datatype='string' name='F26' ordinal='25' />
              <column datatype='string' name='F27' ordinal='26' />
              <column datatype='string' name='F28' ordinal='27' />
              <column datatype='string' name='F29' ordinal='28' />
              <column datatype='string' name='F30' ordinal='29' />
              <column datatype='string' name='F31' ordinal='30' />
              <column datatype='string' name='F32' ordinal='31' />
              <column datatype='string' name='F33' ordinal='32' />
              <column datatype='string' name='F34' ordinal='33' />
              <column datatype='string' name='F35' ordinal='34' />
              <column datatype='string' name='F36' ordinal='35' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F10]' value='[GDP.csv].[F10]' />
          <map key='[F11]' value='[GDP.csv].[F11]' />
          <map key='[F12]' value='[GDP.csv].[F12]' />
          <map key='[F13]' value='[GDP.csv].[F13]' />
          <map key='[F14]' value='[GDP.csv].[F14]' />
          <map key='[F15]' value='[GDP.csv].[F15]' />
          <map key='[F16]' value='[GDP.csv].[F16]' />
          <map key='[F17]' value='[GDP.csv].[F17]' />
          <map key='[F18]' value='[GDP.csv].[F18]' />
          <map key='[F19]' value='[GDP.csv].[F19]' />
          <map key='[F20]' value='[GDP.csv].[F20]' />
          <map key='[F21]' value='[GDP.csv].[F21]' />
          <map key='[F22]' value='[GDP.csv].[F22]' />
          <map key='[F23]' value='[GDP.csv].[F23]' />
          <map key='[F24]' value='[GDP.csv].[F24]' />
          <map key='[F25]' value='[GDP.csv].[F25]' />
          <map key='[F26]' value='[GDP.csv].[F26]' />
          <map key='[F27]' value='[GDP.csv].[F27]' />
          <map key='[F28]' value='[GDP.csv].[F28]' />
          <map key='[F29]' value='[GDP.csv].[F29]' />
          <map key='[F30]' value='[GDP.csv].[F30]' />
          <map key='[F31]' value='[GDP.csv].[F31]' />
          <map key='[F32]' value='[GDP.csv].[F32]' />
          <map key='[F33]' value='[GDP.csv].[F33]' />
          <map key='[F34]' value='[GDP.csv].[F34]' />
          <map key='[F35]' value='[GDP.csv].[F35]' />
          <map key='[F36]' value='[GDP.csv].[F36]' />
          <map key='[F4]' value='[GDP.csv].[F4]' />
          <map key='[F5]' value='[GDP.csv].[F5]' />
          <map key='[F6]' value='[GDP.csv].[F6]' />
          <map key='[F7]' value='[GDP.csv].[F7]' />
          <map key='[F8]' value='[GDP.csv].[F8]' />
          <map key='[F9]' value='[GDP.csv].[F9]' />
          <map key='[GDP]' value='[GDP.csv].[GDP]' />
          <map key='[Notes]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Notes]' />
          <map key='[Population]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Population]' />
          <map key='[Race]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Race]' />
          <map key='[State (GDP.csv)]' value='[GDP.csv].[State]' />
          <map key='[State]' value='[Bridged-Race Population Estimates 1990-2018.csv].[State]' />
          <map key='[Year]' value='[GDP.csv].[Year]' />
          <map key='[Yearly July 1st Estimates Code]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates Code]' />
          <map key='[Yearly July 1st Estimates]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Notes]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Notes</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Race]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly July 1st Estimates</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Yearly July 1st Estimates]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Yearly July 1st Estimates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly July 1st Estimates Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yearly July 1st Estimates Code]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Yearly July 1st Estimates Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (GDP.csv)]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F23</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F23]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F23</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F24</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F24]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F24</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F25</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F25]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F25</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F26</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F26]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F26</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F27</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F27]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F27</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F28</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F28]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F28</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F29</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F29]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F29</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F30</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F30]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F30</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F31</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F31]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F31</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F32</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F32]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F32</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F33</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F33]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F33</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F34</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F34]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F34</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F35</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F35]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F35</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F36</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F36]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F36</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F10]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F11]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F12]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F20]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F21]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F22]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F23]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F24]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F25]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F26]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F27]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F28]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F29]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F30]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F31]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F32]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F33]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F34]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F35]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F36]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F4]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F5]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F6]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F7]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Notes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Race]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year1' datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Yearly July 1st Estimates Code]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Yearly July 1st Estimates]' derivation='Year' name='[yr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='State'>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.522988' measure-ordering='alphabetic' measure-percentage='0.477012' rowDisplayCount='7000' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Race:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Black or African American&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <filter class='categorical' column='[yr:Yearly July 1st Estimates:ok]' filter-group='2'>
        <groupfilter from='1990' function='range' level='[yr:Yearly July 1st Estimates:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Diversity Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' forecast-column-base='[sum:Population:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year' name='[yr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]</rows>
        <cols>([federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk] / [federated.1w5rbnj13ry4281ey8j0d14cq2m3].[yr:Yearly July 1st Estimates:ok])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='20' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{894371E9-E223-476B-9BD9-E01E11B826D0}' />
    </worksheet>
    <worksheet name='Diversity vs. GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year1' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (GDP.csv)]' derivation='None' name='[none:State (GDP.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State (GDP.csv):nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State (GDP.csv):nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk] * [federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk])</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:GDP:qk]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2C74842F-40F5-4F52-A053-CB76F2D4ACB1}' />
    </worksheet>
    <worksheet name='Diversity1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year-Trunc' name='[tyr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;American Indian or Alaska Native&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;Asian or Pacific Islander&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;Black or African American&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;White&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]</column>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
              <size column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk]' />
              <lod column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]' />
              <lod column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='4.2105045318603516' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[Latitude (generated)]</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{12F3B7A1-29B5-4995-AC8D-51AA356A2F38}' />
    </worksheet>
    <worksheet name='GDP Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' forecast-column-base='[sum:GDP:qk]' forecast-column-type='forecast-value' name='[fVal:sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (GDP.csv)]' derivation='None' name='[none:State (GDP.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year-Trunc' name='[tyr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</column>
        </pages>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='20' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{22FCE739-11F4-4E3E-BED0-01C6CB5EEDA7}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0CA8933A-225D-47BE-854D-5980373DDCB9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Diversity' captured-sheet='Diversity1' id='1'>
                    <currentDeltas />
                    <capturedDeltas>
                      <worksheet name='Diversity1'>
                        <current-page>
                          <multibucket>
                            <bucket>#1993-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Diversity Forcast' captured-sheet='Diversity Forecast' id='2' />
                  <story-point caption='GDP Forecast' captured-sheet='GDP Forecast' id='3' />
                  <story-point caption='Comparing' captured-sheet='Diversity vs. GDP' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{EE6F3001-BA92-41A1-8480-ED7FE7E06CAB}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Diversity1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Yearly July 1st Estimates:qk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AA19010-7866-42E6-9F62-0597CC09702A}' />
    </window>
    <window class='worksheet' name='Diversity Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB772174-CDE9-4D03-8D44-B11F29142384}' />
    </window>
    <window class='worksheet' name='GDP Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2037-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:qk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D44B240-2E6B-41F5-B5E5-CC91F88D5A52}' />
    </window>
    <window class='worksheet' name='Diversity vs. GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F481BDE3-D81B-42C0-AF25-8B8B4667AFCA}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{480E42DB-F420-439F-B8B2-7599B0A1AD3A}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{AA597E90-8551-4B0B-92FF-5EEC59076894}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diversity Forecast' width='192'>
      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
      0Gq1svRWq8V4PKZer+c8T7lcxnVd1tfXs2OX8afnebm8NzY26Pf7RFGUe2Jsbm4yGAyyWHVJ
      o9FgPp/nGlbLeu7v7+e8calUQgjB8fFxrp5bW1v0ej0mk0nu+M3NTQ4ODigUCpm3W8at+/v7
      55465XKZg4ODc0+RxWJBv98/d87j4+PMCZyt//7+fi5N0zQajQb7+/u5691sNrEsC13X2djY
      yN2fOI6zeP759LNPv2U9oyjK3YdyuUylUiFJktx9aLVaaJpGqVSiVqt9a95bW1vEcZzLw7Is
      1tfXz6U3Go3LfwLM53Pq9XpO7ctWeLlcptfrZelnG1FnvXG3281Cpec90sbGRharL/P2PI9q
      tZo7dtnqL5VKOa9xcnKSPTbPeo1er8f29jZhGOa83XQ6pdlsnqvPfD7n7t27OW/neR6WZXHr
      1q1c3p1Ohxs3btBut3PHd7td7ty5QxRF554Ad+/ePXdOz/O4c+dO7hqOx2OazSbXr1/PpXc6
      HW7dukWpVMp52H6/z927d8890abTKXfv3s09XbrdLq1WC8uycp602+2ytbXFbDbLwiMpJYPB
      IHMkz1+rzc3N3DUZDAZUKhVqtVrumnQ6HTY2NhBCZO2UZbm3trbOXZPxeMzm5sWCPX0AAANT
      SURBVOa5+xDHMevr67nIotPpYPzsZz/7GZeA7/tZaFEoFKhUKrnG6rJ9UCgUsnTbtvE8j+3t
      bUzTzNKr1Sqe52UeZhlTlstlIFVysVjM8jVNk0qlQqlUyp1TSsn6+jq2bWfp5XIZx3HY3t5G
      1/UsvVKpEEURrVYL0zQzj1wsFrEsi2q1mst7Op0SRRFra2uUSiUgbQN0Oh1s26bRaGQ9G8Vi
      kcePH9NoNKhWq1m8r2kanU6H9fV1qtVqVp9lXNxqtbI6a5qWtRfW1tZy1/Dg4CAzpuW1WqY3
      m02q1WpWHyEEJycntFqtXCN7Pp9nnRLL+ti2zf7+Po1Gg0qlkmundLtd1tbWcuV2XRfHcVhf
      X8/KDakTWz7ZluUuFovs7+9TrVap1+tZuU3T5PDwkLW1NSqVStZ+ieOY4XB4rtyz2YwwDLNy
      +75PpVKh2+1iWVZmc8tzXnov0OHhIZPJhMePH+fS9/f36ff7OW8cBAHdbpfj4+Oc9x4Oh4zH
      Y/b393Pe+OjoiPl8zoMHD3Kx58HBAcPhkIODgyxNSsnBwQHdbjfnGReLBScnJ1k5l/R6PabT
      KY8ePcrFnoeHh1n62bwhHXQ563kcx8ka3me94NOnT7l27Rrz+ZzRaJSlj8djarUa/X4/9wQI
      wzAz1LPn1HUdx3HOxfpbW1tMJpPcNez1erTbbSaTSe4azudzCoVCzhtLKbPer+efANvb20yn
      09y1mkwmlMtl+v1+7gkQxzFRFJ0rt2maLBaLXN79fj/L+/n2UqvVYjQa5Z4AjuNgWVbuXr7o
      PriuS61Wy7qfz94H5CUxHo+llFL6vi+FENLzvNzffd+XUspcuhDiwuOTJJFhGMokSbL/k1LK
      IAiyY4UQubyfz2OZ98ueM4qi3Oe35S2llI7jyCiK5GAwyJXb8zzpuq6cTqdZehiGMggCOZlM
      cvm4riuTJJH9fl8mSZLLO0kS2ev1zp0zCAI5HA6ztDiOpe/7cj6fy/l8nrtWURTJ4XAogyDI
      5SGEkN1u98L6nJyc5ModhqEcj8e5+7DMo9fr5e6D4zgyjmPZ7/dz19txHOn7vhyNRufKPZvN
      5GKxyF3vOI7lYDCQYRheeM7fVu7xeCyTJJGu60rXdeVkMsmOjaJI/n8T6QM9a47I7QAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diversity vs. GDP' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Diversity1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP Forecast' width='192'>
      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
      0KETVpt1UwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
