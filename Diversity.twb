<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Bridged-Race Population Estimates 1990-2018' inline='true' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bridged-Race Population Estimates 1990-2018' name='textscan.1kb6q9m0busn4p1e4opm709oo3b7'>
            <connection class='textscan' directory='/Users/stenistephan/Desktop' filename='Bridged-Race Population Estimates 1990-2018.csv' password='' server='' />
          </named-connection>
          <named-connection caption='GDP' name='textscan.1o9fxq31lfbp6g117hn291530hkp'>
            <connection class='textscan' directory='/Users/stenistephan/Desktop' filename='GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Bridged-Race Population Estimates 1990-2018.csv].[State]' />
                <expression op='[GDP.csv].[State]' />
              </expression>
              <expression op='='>
                <expression op='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates]' />
                <expression op='[GDP.csv].[Year]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1kb6q9m0busn4p1e4opm709oo3b7' name='Bridged-Race Population Estimates 1990-2018.csv' table='[Bridged-Race Population Estimates 1990-2018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Notes' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Race' ordinal='2' />
              <column datatype='date' date-parse-format='yyyy' name='Yearly July 1st Estimates' ordinal='3' />
              <column datatype='integer' name='Yearly July 1st Estimates Code' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1o9fxq31lfbp6g117hn291530hkp' name='GDP.csv' table='[GDP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='real' name='GDP' ordinal='2' />
              <column datatype='string' name='F4' ordinal='3' />
              <column datatype='string' name='F5' ordinal='4' />
              <column datatype='string' name='F6' ordinal='5' />
              <column datatype='string' name='F7' ordinal='6' />
              <column datatype='string' name='F8' ordinal='7' />
              <column datatype='string' name='F9' ordinal='8' />
              <column datatype='string' name='F10' ordinal='9' />
              <column datatype='string' name='F11' ordinal='10' />
              <column datatype='string' name='F12' ordinal='11' />
              <column datatype='string' name='F13' ordinal='12' />
              <column datatype='string' name='F14' ordinal='13' />
              <column datatype='string' name='F15' ordinal='14' />
              <column datatype='string' name='F16' ordinal='15' />
              <column datatype='string' name='F17' ordinal='16' />
              <column datatype='string' name='F18' ordinal='17' />
              <column datatype='string' name='F19' ordinal='18' />
              <column datatype='string' name='F20' ordinal='19' />
              <column datatype='string' name='F21' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
              <column datatype='string' name='F23' ordinal='22' />
              <column datatype='string' name='F24' ordinal='23' />
              <column datatype='string' name='F25' ordinal='24' />
              <column datatype='string' name='F26' ordinal='25' />
              <column datatype='string' name='F27' ordinal='26' />
              <column datatype='string' name='F28' ordinal='27' />
              <column datatype='string' name='F29' ordinal='28' />
              <column datatype='string' name='F30' ordinal='29' />
              <column datatype='string' name='F31' ordinal='30' />
              <column datatype='string' name='F32' ordinal='31' />
              <column datatype='string' name='F33' ordinal='32' />
              <column datatype='string' name='F34' ordinal='33' />
              <column datatype='string' name='F35' ordinal='34' />
              <column datatype='string' name='F36' ordinal='35' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F10]' value='[GDP.csv].[F10]' />
          <map key='[F11]' value='[GDP.csv].[F11]' />
          <map key='[F12]' value='[GDP.csv].[F12]' />
          <map key='[F13]' value='[GDP.csv].[F13]' />
          <map key='[F14]' value='[GDP.csv].[F14]' />
          <map key='[F15]' value='[GDP.csv].[F15]' />
          <map key='[F16]' value='[GDP.csv].[F16]' />
          <map key='[F17]' value='[GDP.csv].[F17]' />
          <map key='[F18]' value='[GDP.csv].[F18]' />
          <map key='[F19]' value='[GDP.csv].[F19]' />
          <map key='[F20]' value='[GDP.csv].[F20]' />
          <map key='[F21]' value='[GDP.csv].[F21]' />
          <map key='[F22]' value='[GDP.csv].[F22]' />
          <map key='[F23]' value='[GDP.csv].[F23]' />
          <map key='[F24]' value='[GDP.csv].[F24]' />
          <map key='[F25]' value='[GDP.csv].[F25]' />
          <map key='[F26]' value='[GDP.csv].[F26]' />
          <map key='[F27]' value='[GDP.csv].[F27]' />
          <map key='[F28]' value='[GDP.csv].[F28]' />
          <map key='[F29]' value='[GDP.csv].[F29]' />
          <map key='[F30]' value='[GDP.csv].[F30]' />
          <map key='[F31]' value='[GDP.csv].[F31]' />
          <map key='[F32]' value='[GDP.csv].[F32]' />
          <map key='[F33]' value='[GDP.csv].[F33]' />
          <map key='[F34]' value='[GDP.csv].[F34]' />
          <map key='[F35]' value='[GDP.csv].[F35]' />
          <map key='[F36]' value='[GDP.csv].[F36]' />
          <map key='[F4]' value='[GDP.csv].[F4]' />
          <map key='[F5]' value='[GDP.csv].[F5]' />
          <map key='[F6]' value='[GDP.csv].[F6]' />
          <map key='[F7]' value='[GDP.csv].[F7]' />
          <map key='[F8]' value='[GDP.csv].[F8]' />
          <map key='[F9]' value='[GDP.csv].[F9]' />
          <map key='[GDP]' value='[GDP.csv].[GDP]' />
          <map key='[Notes]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Notes]' />
          <map key='[Population]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Population]' />
          <map key='[Race]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Race]' />
          <map key='[State (GDP.csv)]' value='[GDP.csv].[State]' />
          <map key='[State]' value='[Bridged-Race Population Estimates 1990-2018.csv].[State]' />
          <map key='[Year]' value='[GDP.csv].[Year]' />
          <map key='[Yearly July 1st Estimates Code]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates Code]' />
          <map key='[Yearly July 1st Estimates]' value='[Bridged-Race Population Estimates 1990-2018.csv].[Yearly July 1st Estimates]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Notes]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Notes</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Race]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly July 1st Estimates</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Yearly July 1st Estimates]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Yearly July 1st Estimates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly July 1st Estimates Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yearly July 1st Estimates Code]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Yearly July 1st Estimates Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Bridged-Race Population Estimates 1990-2018.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (GDP.csv)]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F23</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F23]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F23</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F24</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F24]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F24</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F25</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F25]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F25</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F26</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F26]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F26</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F27</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F27]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F27</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F28</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F28]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F28</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F29</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F29]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F29</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F30</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F30]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F30</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F31</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F31]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F31</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F32</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F32]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F32</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F33</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F33]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F33</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F34</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F34]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F34</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F35</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F35]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F35</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F36</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F36]</local-name>
            <parent-name>[GDP.csv]</parent-name>
            <remote-alias>F36</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F10]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F11]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F12]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F20]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F21]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F22]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F23]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F24]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F25]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F26]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F27]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F28]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F29]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F30]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F31]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F32]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F33]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F34]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F35]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F36]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F4]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F5]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F6]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F7]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Notes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Race]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year1' datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Yearly July 1st Estimates Code]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Yearly July 1st Estimates]' derivation='Year' name='[yr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='State'>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.523643' measure-ordering='alphabetic' measure-percentage='0.476357' rowDisplayCount='7000' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Race:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Black or African American&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <filter class='categorical' column='[yr:Yearly July 1st Estimates:ok]' filter-group='2'>
        <groupfilter from='1990' function='range' level='[yr:Yearly July 1st Estimates:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Diversity Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' forecast-column-base='[sum:Population:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year' name='[yr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]' z-order='1' />
            <reference-line axis-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-pane' value-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:Population:qk]</rows>
        <cols>([federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk] / [federated.1w5rbnj13ry4281ey8j0d14cq2m3].[yr:Yearly July 1st Estimates:ok])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='20' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{894371E9-E223-476B-9BD9-E01E11B826D0}' />
    </worksheet>
    <worksheet name='Diversity vs. GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year1' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (GDP.csv)]' derivation='None' name='[none:State (GDP.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State (GDP.csv):nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State (GDP.csv):nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk] * [federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk])</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:GDP:qk]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2C74842F-40F5-4F52-A053-CB76F2D4ACB1}' />
    </worksheet>
    <worksheet name='Diversity1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year-Trunc' name='[tyr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;American Indian or Alaska Native&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;Asian or Pacific Islander&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;Black or African American&quot;' />
              <groupfilter function='member' level='[none:Race:nk]' member='&quot;White&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]</column>
            <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' />
              <size column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk]' />
              <lod column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]' />
              <lod column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='4.2105045318603516' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[Latitude (generated)]</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{12F3B7A1-29B5-4995-AC8D-51AA356A2F38}' />
    </worksheet>
    <worksheet name='GDP Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bridged-Race Population Estimates 1990-2018' name='federated.1w5rbnj13ry4281ey8j0d14cq2m3' />
          </datasources>
          <datasource-dependencies datasource='federated.1w5rbnj13ry4281ey8j0d14cq2m3'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (GDP.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='date' name='[Yearly July 1st Estimates]' role='dimension' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' forecast-column-base='[sum:GDP:qk]' forecast-column-type='forecast-value' name='[fVal:sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (GDP.csv)]' derivation='None' name='[none:State (GDP.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly July 1st Estimates]' derivation='Year-Trunc' name='[tyr:Yearly July 1st Estimates:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]' z-order='1' />
            <reference-line axis-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-pane' value-column='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[fVal:sum:GDP:qk]</rows>
        <cols>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</cols>
        <pages>
          <column>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</column>
        </pages>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='20' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{22FCE739-11F4-4E3E-BED0-01C6CB5EEDA7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Diversity' captured-sheet='Diversity1' id='1'>
                    <currentDeltas />
                    <capturedDeltas>
                      <worksheet name='Diversity1'>
                        <current-page>
                          <multibucket>
                            <bucket>#1993-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Diversity Forcast' captured-sheet='Diversity Forecast' id='2' />
                  <story-point caption='GDP Forecast' captured-sheet='GDP Forecast' id='3' />
                  <story-point caption='Comparing' captured-sheet='Diversity vs. GDP' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{EE6F3001-BA92-41A1-8480-ED7FE7E06CAB}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Diversity1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1990-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Yearly July 1st Estimates:qk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AA19010-7866-42E6-9F62-0597CC09702A}' />
    </window>
    <window class='worksheet' name='Diversity Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:ok]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB772174-CDE9-4D03-8D44-B11F29142384}' />
    </window>
    <window class='worksheet' name='GDP Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1990-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:qk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Yearly July 1st Estimates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D44B240-2E6B-41F5-B5E5-CC91F88D5A52}' />
    </window>
    <window class='worksheet' name='Diversity vs. GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1990-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:Race:nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[none:State (GDP.csv):nk]</field>
            <field>[federated.1w5rbnj13ry4281ey8j0d14cq2m3].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F481BDE3-D81B-42C0-AF25-8B8B4667AFCA}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{AA597E90-8551-4B0B-92FF-5EEC59076894}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diversity Forecast' width='192'>
      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
      trGxsZP7Gk8GlQDZbBbHcVBKkclkema+hBCMjIyQJAlaa4rFYo9tZmaGSqWC7/s9gdyTNiFE
      37mZmZmh0WiQJAlTU1M95ZmenqbdbtNqtZidne2xTU5OkiQJtVqtzzY6OorjOFSr1T5bLpdj
      aGiIcrnM9PR0z2jtOA7j4+Mngf6TrlXXXSuXy2QyGYaHh59ZR8uyToLVrq1UKrGzs4NlWT2u
      DMDU1BQ7Ozs0m82++s/MzLC7u8vBwUHPNT4XAbRarZOAq1Kp9A2B9XqdYrF4Eig9aTs8PGRy
      chLbtnnw4EGPbWtri4WFBTzP6wmeADY2Nrhy5Qqe5/UN82tra9y4cQPf97l3716PbWVlhTfe
      eONk5upJtre3mZ6exvM8Hj582GOr1WqkUinS6TRHR0c9o5xSilarxfDwMK1Wqy+Y3dvb4+bN
      m5RKpZ79dl2gmzdvMjc311MerTXr6+u89dZbXL58mdXV1Z7yrK6ucv36dd58882++q+srHDl
      yhXeeecdNjY2+s7b1NQU77zzDltbWz22o6MjfN/n5s2bHB0d9fTWURTRarW4efMmSqmeCYSu
      u3bz5k3y+Tw7Ozs9tu3tbW7evMns7GxPHeM4ptFocPXq1Wfuc39/n6tXrzI0NNS3z62tLa5e
      vcrU1FTPhMW5BMG+759MZRWLxb55WsdxiKKI2dnZvqEznU6fBKRPuw7d4OnKlSt9rlOxWGRz
      c5OFhYUevxI6Pfna2hrT09N9rsrU1BT3799ndHS0L9AtFousra2Rz+f77m1kMhm2t7dJpVIM
      Dw/3bGtZnWeiKqVOxPx0PZaWlhBC9AXBo6OjLC0tobVmcXGxxzYxMcHy8jJAz3QtdEaArrif
      Hsnm5ua4d+9e36jS/W1XME+ORtAJgu/fv8/y8vLJxEYX13WxLIvl5WUcx+mZkobO6LG8vHwy
      1fsk3Zk1rXWPzXVdbNs+1T6LxeIz93kuI4BlWUxMTFAsFjk+Pu5pdEIIxsfHmZiYoFqt9jTW
      rns0MzNDs9ns6QG6wdHs7CxBEPRNWQ4NDTE7O0uSJH3xQSaTYWZmBiFEzxQZgOd5TE9P4/t+
      3/Sh4zhMT0+Ty+V6RqpuHScnJxkZGeHo6KjPR56YmGBsbIxqtdoTzEKnZ7Usi4sXL/YFnt19
      Xbt27Zm2JEmeGR91z/P8/Hxf/bvbzczM9MVH1WqVKIoolUp9nUMQBDSbTYaGhrBtu28atBvo
      FgqFvs6qO+164cKFZ5ZVKcW1a9fY3d09+V5KSbVaxfM8CoVCXyf35D6fvh7dEerpfZ6LAJIk
      YXl5mSAICIKgr5e/c+fOie3pIGhpaYlWq/VM2/LyMq1Wi1ar1Xex1tfXT9ytpwPdvb09dnd3
      CYKgLyCv1Wqsr68TBEFfQw2CgJWVFYIg6BtV4jjm7t27J/V4mt///vfPrX86nWZ8fJylpaU+
      4TiOw8WLF7l9+/YzJw+uXLlycm6fRErJ1atXWVlZ6ZsFiqKI69ev8+DBgz6RR1HEpUuXKJfL
      PQ0HOIk14jhmc3Ozpx5KKQqFAr7vs7a21netMpkMo6OjLC8v99XRdV3m5ub4+OOPe66V1ppC
      oUAqlWJtba3vvHX3effu3Wfuc35+vm+f53In2Pf9kzUaSZKcuARdlFKdp00/Wh/0pIvQtUHn
      Ajw5+3JaW/c4Qojn2izLIo7jZ872dOf0n2dLkuTk8fBPl6fbMJ6sY9c9DIIAx3F69tu1dcX4
      pOsVxzGO45AkCXEc90wudBtEd9rxyTn07kyN4zg0Go0e10JrfbKc4Fm2br0bjQa5XK5nDVAc
      x3ied3JT8NPWsd1un9wzOKt9Pn3e/j+gQ2xi23DNhAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diversity vs. GDP' width='192'>
      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
      VdHsxlIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diversity1' width='192'>
      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
      ye4a/gFWwJp6v76DpgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
